"""Add user_stocks table

Revision ID: 82e2f3ba3824
Revises: 1f17a8475235
Create Date: 2025-04-02 14:11:22.221825

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '82e2f3ba3824'
down_revision: Union[str, None] = '1f17a8475235'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stocks',
    sa.Column('code', sa.String(length=20), nullable=False, comment='증권 거래소 코드 (예: 005930)'),
    sa.Column('name', sa.String(length=255), nullable=False, comment='증권명 (예: 삼성전자)'),
    sa.Column('current_price', sa.Float(), nullable=False, comment='현재 주가'),
    sa.Column('market_cap', sa.Float(), nullable=False, comment='시가총액'),
    sa.Column('volume', sa.Integer(), nullable=False, comment='거래량'),
    sa.Column('high_price', sa.Float(), nullable=False, comment='고가'),
    sa.Column('low_price', sa.Float(), nullable=False, comment='저가'),
    sa.Column('open_price', sa.Float(), nullable=False, comment='시가'),
    sa.Column('prev_close', sa.Float(), nullable=False, comment='전일 종가'),
    sa.Column('change_rate', sa.Float(), nullable=False, comment='등락률'),
    sa.Column('change_amount', sa.Float(), nullable=False, comment='등락금액'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='UUID 형식의 고유 식별자'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='레코드 활성화 상태'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='생성 일시'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='수정 일시'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stocks_code'), 'stocks', ['code'], unique=True)
    op.create_index(op.f('ix_stocks_id'), 'stocks', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False, comment='UUID 형식의 고유 식별자'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='사용자 이메일 (로그인 ID)'),
    sa.Column('hashed_password', sa.String(length=255), nullable=False, comment='암호화된 비밀번호'),
    sa.Column('first_name', sa.String(length=255), nullable=True, comment='이름'),
    sa.Column('last_name', sa.String(length=255), nullable=True, comment='성'),
    sa.Column('role', sa.Enum('USER', 'ADMIN', name='userrole'), nullable=True, comment='사용자 역할 (일반 사용자/관리자)'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='계정 활성화 상태'),
    sa.Column('balance', sa.Float(), nullable=True, comment='보유 현금 잔고'),
    sa.Column('portfolio_type', sa.Enum('AGGRESSIVE', 'BALANCED', name='portfoliotype'), nullable=True, comment='선호 포트폴리오 유형'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='생성 일시'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='수정 일시'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('advisory_requests',
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='사용자 ID'),
    sa.Column('portfolio_type', sa.Enum('AGGRESSIVE', 'BALANCED', name='portfoliotype'), nullable=False, comment='포트폴리오 유형'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='자문 상태 (대기/완료/실패)'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='UUID 형식의 고유 식별자'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='레코드 활성화 상태'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='생성 일시'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='수정 일시'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_advisory_requests_id'), 'advisory_requests', ['id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.String(length=36), nullable=False, comment='UUID 형식의 고유 식별자'),
    sa.Column('user_id', sa.String(length=36), nullable=True, comment='행위를 수행한 사용자 ID (시스템 로그의 경우 Null)'),
    sa.Column('action', sa.String(length=50), nullable=False, comment='수행된 행위 유형 (예: 로그인, 입금, 자문 요청)'),
    sa.Column('details', sa.JSON(), nullable=True, comment='행위에 대한 상세 정보'),
    sa.Column('ip_address', sa.String(length=45), nullable=True, comment='행위 발생 IP 주소'),
    sa.Column('user_agent', sa.String(length=255), nullable=True, comment='사용자 브라우저/클라이언트 정보'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='생성 일시'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_table('transactions',
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='사용자 ID'),
    sa.Column('type', sa.String(length=20), nullable=False, comment='거래 유형 (입금/출금)'),
    sa.Column('amount', sa.Float(), nullable=False, comment='거래 금액'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='거래 상태 (완료/대기/실패)'),
    sa.Column('ip_address', sa.String(length=45), nullable=True, comment='거래 발생 IP 주소'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='UUID 형식의 고유 식별자'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='레코드 활성화 상태'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='생성 일시'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='수정 일시'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.create_table('user_stocks',
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='사용자 ID'),
    sa.Column('stock_id', sa.String(length=36), nullable=False, comment='증권 ID'),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='보유 수량'),
    sa.Column('average_price', sa.Float(), nullable=False, comment='평균 매수가'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='UUID 형식의 고유 식별자'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='레코드 활성화 상태'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='생성 일시'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='수정 일시'),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_stocks_id'), 'user_stocks', ['id'], unique=False)
    op.create_table('advisory_recommendations',
    sa.Column('advisory_request_id', sa.String(length=36), nullable=False, comment='자문 요청 ID'),
    sa.Column('stock_id', sa.String(length=36), nullable=False, comment='추천 증권 ID'),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='추천 수량'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='UUID 형식의 고유 식별자'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='레코드 활성화 상태'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='생성 일시'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='수정 일시'),
    sa.ForeignKeyConstraint(['advisory_request_id'], ['advisory_requests.id'], ),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_advisory_recommendations_id'), 'advisory_recommendations', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_advisory_recommendations_id'), table_name='advisory_recommendations')
    op.drop_table('advisory_recommendations')
    op.drop_index(op.f('ix_user_stocks_id'), table_name='user_stocks')
    op.drop_table('user_stocks')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_advisory_requests_id'), table_name='advisory_requests')
    op.drop_table('advisory_requests')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_stocks_id'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_code'), table_name='stocks')
    op.drop_table('stocks')
    # ### end Alembic commands ###
